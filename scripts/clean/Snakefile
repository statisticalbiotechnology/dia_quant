import os

#PIPELINES = glob_wildcards("data/{pipeline}/{method}_results.csv").pipeline
#METHODS = glob_wildcards("data/{pipeline}/{method}_results.csv").method

PIPELINES = ["ID", "PS"]
METHODS = ["triqler", "top3", "msstats", "msqrob2"]
DIFF_HELA_VS_NONHELA_PARAMS = ["all", "ecoli", "yeast"]
FC_THRESHOLDS = [0.48]

#NOTE THIS IS ABSOLUTE PATH dUE TO SIZE OF FILE
#QUANTIULE BINS PARAMS
QUANTILE_BINS_PLOT_DIRS = ["/hdd_14T/data/PXD002952/20210614_dataset/result_files_20220214/DID/osw_results/", 
							"data/PS/report_for_top3.tsv"]
QUANTILE_BIN_LOG = ["True", "False"]
HLINE_TYPE = ["median", "mean"]

rule generate_plots:
	input:
		expand("results/histogram_{iPipeline}_{iMethod}.png", iPipeline = PIPELINES, iMethod = METHODS),
		expand("results/diff_HeLa_vs_nonHeLa_{iPipeline}_{iMethod}_{iSpecie}.png", iPipeline = PIPELINES, iMethod = METHODS, iSpecie = DIFF_HELA_VS_NONHELA_PARAMS),
        expand("results/calibration_{iPipeline}_{iMethod}_{iFc_threshold}.png", iPipeline = PIPELINES, iMethod = METHODS, iFc_threshold = FC_THRESHOLDS),
        expand("results/fraction_missing_values_{iPipeline}.png", iPipeline = PIPELINES),
		expand("results/quantile_bins_{iPipeline}_log_{iLog}_{iHline_type}.png", iPipeline = PIPELINES, iLog = QUANTILE_BIN_LOG, iHline_type = HLINE_TYPE)

rule plot_histogram:
	input:
		script = "plot_histogram.py",
		result_file = "data/{iPipeline}/{iMethod}_results.csv",
	params:	
		method_type = "{iMethod}"
	output:
		output_file = "results/histogram_{iPipeline}_{iMethod}.png"
	shell:
		"python {input.script} \
			--input_file {input.result_file} \
			--input_type {params.method_type} \
			--output {output.output_file}"

rule plot_differential_HeLa_vs_nonHela:
	input:
		script = "plot_differential_HeLa_vs_nonHeLa.py",
		triqler_input = "data/{iPipeline}/triqler_results.csv",
		top3_input = "data/{iPipeline}/top3_results.csv",
		msstats_input = "data/{iPipeline}/msstats_results.csv",
		msqrob2_input = "data/{iPipeline}/msqrob2_results.csv"
	params:
		specie = "{iSpecie}"
	output:
		output = "results/diff_HeLa_vs_nonHeLa_{iPipeline}_{iMethod}_{iSpecie}.png"
	shell:
		"python {input.script} \
			--triqler_input {input.triqler_input} \
			--top3_input {input.top3_input} \
			--msstats_input {input.msstats_input} \
			--msqrob2_input {input.msqrob2_input} \
			--specie {params.specie} \
			--output {output.output}"

rule plot_calibration_plot:
    input:
        script = "plot_calibration_curve.py",
        triqler_input = "data/{iPipeline}/triqler_results.csv",
        top3_input = "data/{iPipeline}/top3_results.csv",
        msstats_input = "data/{iPipeline}/msstats_results.csv",
        msqrob2_input = "data/{iPipeline}/msqrob2_results.csv"
    params:
        fc_threshold = "{iFc_threshold}"
    output:
        output = "results/calibration_{iPipeline}_{iMethod}_{iFc_threshold}.png"
    shell:
        "python {input.script} \
        	--triqler_input {input.triqler_input} \
			--top3_input {input.top3_input} \
			--msstats_input {input.msstats_input} \
			--msqrob2_input {input.msqrob2_input} \
			--fc_threshold {params.fc_threshold} \
			--output {output.output}"

rule plot_fraction_missing_values:
    input:
        script = "plot_fraction_missing_values.py",
        triqler_input = "data/{iPipeline}/triqler_input.csv" 
    output:
        output = "results/fraction_missing_values_{iPipeline}.png"
    shell:
        "python {input.script} \
            --triqler_input {input.triqler_input} \
            --output {output.output}"

rule plot_quantile_bins_PS:
	input:
		script = "plot_quantile_bins.py",
		file_directory = QUANTILE_BINS_PLOT_DIRS[1]
	params:
		file_name_extension = "PS",
		threshold = 0.01,
		log = "{iLog}",
		ylim = "[0,5]",
		quantiles = 8,
		hline_type = "{iHline_type}",
		input_type = "PS"
	output:
		output = "results/quantile_bins_PS_log_{iLog}_{iHline_type}.png"
	shell:
		"python {input.script} \
			--file_directory {input.file_directory} \
			--threshold {params.threshold} \
			--log {params.log} \
			--ylim {params.ylim} \
			--quantiles {params.quantiles} \
			--hline_type {params.hline_type} \
			--input_type {params.input_type} \
			--output {output.output}"

rule plot_quantile_bins_ID:
	input:
		script = "plot_quantile_bins.py",
		file_directory = QUANTILE_BINS_PLOT_DIRS[0]
	params:
		file_name_extension = "ID",
		threshold = 0.01,
		log = "{iLog}",
		ylim = "[0,5]",
		quantiles = 8,
		hline_type = "{iHline_type}",
		input_type = "ID"
	output:
		output = "results/quantile_bins_ID_log_{iLog}_{iHline_type}.png"
	shell:
		"python {input.script} \
			--file_directory {input.file_directory} \
			--threshold {params.threshold} \
			--log {params.log} \
			--ylim {params.ylim} \
			--quantiles {params.quantiles} \
			--hline_type {params.hline_type} \
			--input_type {params.input_type} \
			--output {output.output}"

##############################################
# CLEANING RULES
##############################################

rule clean:
    shell:
        "rm -rf results/*"







