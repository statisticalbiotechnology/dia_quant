configfile: "config.yaml"
OSW_FILEDIR = config["OSW_FILEDIR"]
TRIQLER_FC_EVAL = config["TRIQLER_FC_EVAL"]

rule compute:
    input:
        expand("results/concatenated_osw_results.csv"),
        expand("results/mscore_threshold.csv"),
        expand("results/osw_msstats_input.csv"),
        expand("results/osw_msqrob2_input.csv"),
        expand("results/osw_triqler_input.csv"),
        expand("results/osw_top3_input.csv"),
        expand("results/osw_top3_results.csv"),
        expand("results/osw_triqler_fc_"+str(TRIQLER_FC_EVAL)),
        expand("results/osw_msstats_results.csv"),
        expand("results/osw_msqrob2_results.csv")

rule osw_compute_msqrob2:
    input:
        script = "run_msqrob2.r",
        input = "results/osw_msqrob2_input.csv"
    output:
        output = "results/osw_msqrob2_results.csv"
    shell:
        "Rscript {input.script} \
            --input {input.input} \
            --output {output.output}"

    
rule osw_compute_msstats:
    input:
        script = "run_msstats.r",
        input = "results/osw_msstats_input.csv"
    output:
        output = "results/osw_msstats_results.csv"
    shell:
        "Rscript {input.script} \
            --input {input.input} \
            --output {output.output}"

rule osw_compute_triqler:
    input:
        input_file = "results/osw_triqler_input.csv"
    output:
        output = "results/osw_triqler_fc_"+str(TRIQLER_FC_EVAL)
    params:
        fc_eval = TRIQLER_FC_EVAL
    shell:
        "python -m triqler {input.input_file} \
            --out_file {output.output} \
            --fold_change_eval {params.fc_eval} \
            --decoy_pattern DECOY"
            
rule osw_compute_top3:
    input:
        script = "top3.py",
        input_file = "results/osw_top3_input.csv"
    output:
        output = "results/osw_top3_results.csv"
    shell:
        "python {input.script} \
            --input {input.input_file} \
            --output {output.output}"

rule convert_osw_to_top3:
    input:
        script = "top3_formatter/osw.py",
        input_dir = OSW_FILEDIR
    params:
        m_score_threshold = open("results/mscore_threshold.csv").read()
    output:
        output = "results/osw_top3_input.csv"
    shell:
        "python {input.script} --file_dir {input.input_dir} --output {output.output} --m_score_threshold {params.m_score_threshold}"

rule convert_osw_to_triqler:
    input:
        script = "convert_osw_to_triqler.py",
        input_file = "results/concatenated_osw_results.csv"
    output:
        output = "results/osw_triqler_input.csv"
    shell:
        "python {input.script} \
            --input_file {input.input_file} \
            --output {output.output}"

rule convert_osw_to_msqrob2:
    input:
        script = "convert_osw_to_msqrob2.py",
        input_file = "results/concatenated_osw_results.csv"
    params:
        fdr_threshold = 0.01
    output:
        output = "results/osw_msqrob2_input.csv"
    shell:
        "python {input.script} \
            --input_file {input.input_file} \
            --fdr_threshold {params.fdr_threshold} \
            --output {output.output}"   

rule convert_osw_to_msstats:
    input:
        script = "convert_osw_to_msstats.py",
        input_file = "results/concatenated_osw_results.csv"
    params:
        m_score_threshold = open("results/mscore_threshold.csv").read()
    output:
        output = "results/osw_msstats_input.csv"
    shell:
        "python {input.script} \
            --input_file {input.input_file} \
            --output {output.output} \
            --m_score_threshold {params.m_score_threshold}"

rule compute_mscore4pepfdr:
    input:
        script = "mscore4pepfdr.r",
        input = "results/concatenated_osw_results.csv",
    params:    
        fft = "1",
        fdr_target = "0.01"
    output:
        output_file = "results/mscore_threshold.csv"
    shell:
        "Rscript {input.script} \
            -i {input.input} \
            -o {output.output_file} \
            --fft {params.fft} \
            --fdr_target {params.fdr_target}"
 
rule concatenate_osw:
    input:
        script = "concatenate_osw_results.py",
        file_directory = OSW_FILEDIR 
    output:
        output_file = "results/concatenated_osw_results.csv"
    shell:
        "python {input.script} \
            --file_directory {input.file_directory} \
            --output {output.output_file}"





